{"componentChunkName":"component---src-templates-blog-post-js","path":"/2018-07-25-cow-log","webpackCompilationHash":"65b15ba86ccee3daaf11","result":{"data":{"markdownRemark":{"html":"<p>Today (the 24th really), I worked from home. And I created some stuff after work!</p>\n<p>I did <a href=\"../music/\">my daily YouTube post</a> (some acoustic guitar metal lol)</p>\n<p>And then I wrote a really odd JavaScript npm module:\n<a href=\"https://www.npmjs.com/package/@zachlysobey/cow-log\"><code class=\"language-text\">@zachlysobey/cow-log</code></a></p>\n<p>It's essentially a logger function, but instead of executing with parens (<code class=\"language-text\">()</code>),\nits executed on <em>backtick</em> template strings.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">cow<span class=\"token punctuation\">.</span>log<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">result: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>result<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span></code></pre></div>\n<p>It has the added benefit of pretty-printing any objects posted into the little\n<code class=\"language-text\">${...}</code>s</p>\n<p><em>Oh ya, did I forget to say? There's cows!</em></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"> ____________________________\n( result: {                  )\n(   &quot;data&quot;: &quot;my result data&quot; )\n( }                          )\n ----------------------------\n        o   ^__^\n         o  (oo)\\_______\n            (__)\\       )\\/\\\n                ||----w |\n                ||     ||</code></pre></div>\n<p>I got a kick out of writing this. <strong>Why?</strong></p>\n<ul>\n<li>because <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#Tagged_templates\"><em>tagged</em> template string functions</a> are weird.</li>\n<li>because cows are fun</li>\n<li>because I wrote some really weird/ugly code to go along with it.</li>\n</ul>\n<p>For whatever reason, sometimes <strong>it feels good to write bad code</strong>.</p>\n<p>Here's the full implementation:</p>\n<p><em>from: <a href=\"https://github.com/zachlysobey/cow-log/blob/master/index.js\">https://github.com/zachlysobey/cow-log/blob/master/index.js</a></em></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> cow <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'cowsay'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">objectToPrettyString</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">o</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">strings<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>objects</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>\n            cow<span class=\"token punctuation\">.</span><span class=\"token function\">think</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n                text<span class=\"token punctuation\">:</span> strings\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span>\n                        <span class=\"token punctuation\">(</span><span class=\"token parameter\">outputs<span class=\"token punctuation\">,</span> str<span class=\"token punctuation\">,</span> i</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token keyword\">const</span> hasObject <span class=\"token operator\">=</span> i <span class=\"token operator\">&lt;</span> objects<span class=\"token punctuation\">.</span>length\n                            <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>str <span class=\"token operator\">===</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n                                <span class=\"token operator\">?</span> hasObject\n                                    <span class=\"token operator\">?</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>outputs<span class=\"token punctuation\">,</span> <span class=\"token function\">objectToPrettyString</span><span class=\"token punctuation\">(</span>objects<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n                                    <span class=\"token punctuation\">:</span> outputs\n                                <span class=\"token punctuation\">:</span> hasObject\n                                    <span class=\"token operator\">?</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>outputs<span class=\"token punctuation\">,</span> str<span class=\"token punctuation\">,</span> <span class=\"token function\">objectToPrettyString</span><span class=\"token punctuation\">(</span>objects<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n                                    <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>outputs<span class=\"token punctuation\">,</span> str<span class=\"token punctuation\">]</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n                    <span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"date":"July 25, 2018","path":"/2018-07-25-cow-log","title":"Cow Logging and Acoustic Metal","tags":["programming","shell"],"youtube":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}}